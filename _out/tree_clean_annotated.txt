================================================================================
AIVA 專案完整樹狀架構圖（附中文說明）
================================================================================
生成日期: 2025年10月14日
專案路徑: C:\AMD\AIVA

📊 統計資訊
────────────────────────────────────────────────────────────────────────────────
總行數: 467 行
目錄數: 107 個
檔案數: 360 個

🎯 四大核心模組架構
────────────────────────────────────────────────────────────────────────────────
1. Core (核心模組)
   - AI 引擎與智慧決策系統
   - 業務邏輯協調與任務管理
   - 語言: Python
   - 路徑: services/core/aiva_core/

2. Function (功能模組)
   - 安全檢測功能（SQL Injection, XSS, IDOR, SSRF, SCA, SAST, CSPM 等）
   - 語言: Go, Python, Rust, Node.js (多語言混合)
   - 路徑: services/function/

3. Scan (掃描模組)
   - 網站爬蟲與資訊收集
   - 動態內容提取與 JavaScript 分析
   - 語言: Python, Node.js, Rust
   - 路徑: services/scan/

4. Integration (整合模組)
   - 掃描結果整合與分析
   - 風險評估與報告生成
   - 語言: Python
   - 路徑: services/integration/

🔧 排除項目
────────────────────────────────────────────────────────────────────────────────
已排除以下開發環境產物，僅顯示實際專案程式碼：
• 虛擬環境: .venv, venv, env, .env
• Python 快取: __pycache__, .mypy_cache, .ruff_cache, .pytest_cache
• 建置產物: dist, build, target, bin, obj
• 套件目錄: node_modules, site-packages, .egg-info, .eggs
• 備份與輸出: _backup, _out
• 版本控制: .git
• IDE 設定: .idea, .vscode

📈 優化成果
────────────────────────────────────────────────────────────────────────────────
• 原始樹狀圖: ~6000+ 行（含虛擬環境和建置產物）
• 優化後樹狀圖: 467 行（僅包含實際專案程式碼）
• 減少比例: 約 92% 的雜訊檔案被過濾

================================================================================
專案結構樹狀圖
================================================================================

AIVA
├─docker                                    # Docker 容器配置
│   ├─initdb                                # 資料庫初始化腳本
│   │   ├─001_schema.sql                    # 主要資料表結構
│   │   └─002_enhanced_schema.sql           # 增強版資料表結構
│   ├─docker-compose.production.yml         # 生產環境 Docker Compose 配置
│   ├─docker-compose.yml                    # 開發環境 Docker Compose 配置
│   ├─Dockerfile.integration                # 整合服務 Docker 映像檔
│   └─entrypoint.integration.sh             # 整合服務入口腳本
├─docs                                      # 專案文件
│   └─ARCHITECTURE_MULTILANG.md             # 多語言架構說明文件
├─services                                  # 核心服務目錄
│   ├─aiva_common                           # 共用元件庫
│   │   ├─utils                             # 工具函式
│   │   │   ├─dedup                         # 去重處理
│   │   │   │   ├─__init__.py
│   │   │   │   └─dedupe.py                 # 去重邏輯實作
│   │   │   ├─network                       # 網路工具
│   │   │   │   ├─__init__.py
│   │   │   │   ├─backoff.py                # 退避重試機制
│   │   │   │   └─ratelimit.py              # 速率限制器
│   │   │   ├─__init__.py
│   │   │   ├─ids.py                        # ID 生成器
│   │   │   └─logging.py                    # 日誌工具
│   │   ├─__init__.py
│   │   ├─config.py                         # 共用配置
│   │   ├─enums.py                          # 列舉定義
│   │   ├─mq.py                             # 訊息佇列客戶端
│   │   ├─py.typed                          # Python 型別標記檔
│   │   └─schemas.py                        # 共用資料結構
│   ├─core                                  # ⭐ 核心模組（四大模組之一）
│   │   └─aiva_core
│   │       ├─ai_engine                     # AI 引擎
│   │       │   ├─__init__.py
│   │       │   ├─bio_neuron_core_v2.py     # 生物神經元核心 v2
│   │       │   ├─bio_neuron_core.py        # 生物神經元核心 v1
│   │       │   ├─knowledge_base.py         # 知識庫
│   │       │   └─tools.py                  # AI 工具集
│   │       ├─ai_model                      # AI 模型
│   │       │   └─train_classifier.py       # 分類器訓練
│   │       ├─analysis                      # 分析引擎
│   │       │   ├─__init__.py
│   │       │   ├─dynamic_strategy_adjustment.py  # 動態策略調整
│   │       │   ├─initial_surface.py        # 初始攻擊面分析
│   │       │   ├─risk_assessment_engine.py # 風險評估引擎
│   │       │   └─strategy_generator.py     # 策略生成器
│   │       ├─authz                         # 授權管理
│   │       │   ├─__init__.py
│   │       │   ├─authz_mapper.py           # 授權映射器
│   │       │   ├─matrix_visualizer.py      # 權限矩陣視覺化
│   │       │   └─permission_matrix.py      # 權限矩陣
│   │       ├─bizlogic                      # 業務邏輯
│   │       │   ├─__init__.py
│   │       │   ├─finding_helper.py         # 發現項輔助工具
│   │       │   └─worker.py                 # 核心工作處理器
│   │       ├─execution                     # 執行引擎
│   │       │   ├─__init__.py
│   │       │   ├─execution_status_monitor.py  # 執行狀態監控
│   │       │   ├─task_generator.py         # 任務生成器
│   │       │   └─task_queue_manager.py     # 任務佇列管理器
│   │       ├─ingestion                     # 資料接收
│   │       │   ├─__init__.py
│   │       │   └─scan_module_interface.py  # 掃描模組介面
│   │       ├─output                        # 輸出處理
│   │       │   ├─__init__.py
│   │       │   └─to_functions.py           # 轉發到功能模組
│   │       ├─state                         # 狀態管理
│   │       │   ├─__init__.py
│   │       │   └─session_state_manager.py  # 會話狀態管理器
│   │       ├─ui_panel                      # UI 面板
│   │       │   ├─__init__.py
│   │       │   ├─auto_server.py            # 自動啟動伺服器
│   │       │   ├─dashboard.py              # 儀表板
│   │       │   ├─improved_ui.py            # 改進版 UI
│   │       │   └─server.py                 # UI 伺服器
│   │       ├─__init__.py
│   │       ├─ai_controller.py              # AI 控制器
│   │       ├─ai_integration_test.py        # AI 整合測試
│   │       ├─ai_ui_schemas.py              # AI UI 資料結構
│   │       ├─app.py                        # 核心應用程式主檔
│   │       ├─multilang_coordinator.py      # 多語言協調器
│   │       ├─nlg_system.py                 # 自然語言生成系統
│   │       ├─optimized_core.py             # 優化版核心
│   │       └─schemas.py                    # 核心資料結構
│   ├─function                              # ⭐ 功能模組（四大模組之一）
│   │   ├─common                            # 功能共用元件
│   │   │   ├─go                            # Go 共用庫
│   │   │   │   └─aiva_common_go
│   │   │   │       ├─config                # 配置管理
│   │   │   │       │   ├─config_test.go
│   │   │   │       │   └─config.go
│   │   │   │       ├─logger                # 日誌模組
│   │   │   │       │   └─logger.go
│   │   │   │       ├─mq                    # 訊息佇列客戶端
│   │   │   │       │   ├─client_test.go
│   │   │   │       │   └─client.go
│   │   │   │       ├─schemas               # Go 資料結構
│   │   │   │       │   ├─message_test.go
│   │   │   │       │   └─message.go
│   │   │   │       ├─go.mod                # Go 模組定義
│   │   │   │       ├─go.sum                # Go 依賴鎖定檔
│   │   │   │       ├─README.md
│   │   │   │       └─SCHEMA_MAPPING.md     # 資料結構映射文件
│   │   │   ├─__init__.py
│   │   │   ├─detection_config.py           # 檢測配置
│   │   │   ├─smart_payload_fuzzer_design.md  # 智慧 Payload Fuzzer 設計
│   │   │   └─unified_smart_detection_manager.py  # 統一智慧檢測管理器
│   │   ├─function_authn_go                 # 身份認證檢測 (Go)
│   │   │   ├─cmd
│   │   │   │   └─worker
│   │   │   │       └─main.go               # 工作處理器入口
│   │   │   ├─internal
│   │   │   │   ├─brute_force               # 暴力破解模組
│   │   │   │   │   ├─brute_forcer.go
│   │   │   │   │   ├─brute_forcer.go.backup2
│   │   │   │   │   └─brute_forcer.go.broken
│   │   │   │   ├─cache                     # 快取模組
│   │   │   │   │   └─redis_cache.go        # Redis 快取
│   │   │   │   ├─metrics                   # 效能指標
│   │   │   │   │   └─performance.go
│   │   │   │   └─token_test                # Token 測試
│   │   │   │       └─token_analyzer.go     # Token 分析器
│   │   │   ├─function_authn_go.exe         # 編譯後執行檔
│   │   │   ├─go.mod
│   │   │   └─go.sum
│   │   ├─function_crypto_go                # 密碼學檢測 (Go)
│   │   │   ├─cmd
│   │   │   │   └─worker
│   │   │   │       └─main.go
│   │   │   ├─internal
│   │   │   │   └─analyzer
│   │   │   │       └─crypto_analyzer.go    # 密碼學分析器
│   │   │   ├─function_crypto_go.exe
│   │   │   ├─go.mod
│   │   │   └─go.sum
│   │   ├─function_cspm_go                  # 雲端安全態勢管理 (Go)
│   │   │   ├─cmd
│   │   │   │   └─worker
│   │   │   │       └─main.go
│   │   │   ├─internal
│   │   │   │   └─scanner
│   │   │   │       └─cspm_scanner.go       # CSPM 掃描器
│   │   │   ├─pkg
│   │   │   ├─go.mod
│   │   │   ├─go.sum
│   │   │   └─MIGRATION_REPORT.md           # 遷移報告
│   │   ├─function_idor                     # IDOR 不安全直接物件參照檢測 (Python)
│   │   │   └─aiva_func_idor
│   │   │       ├─__init__.py
│   │   │       ├─enhanced_worker.py        # 增強版工作處理器
│   │   │       ├─resource_id_extractor.py  # 資源 ID 提取器
│   │   │       ├─schemas.py
│   │   │       ├─smart_idor_detector.py    # 智慧 IDOR 檢測器
│   │   │       └─worker.py
│   │   ├─function_postex                   # 後滲透檢測 (Python)
│   │   │   ├─__init__.py
│   │   │   ├─lateral_movement.py           # 橫向移動檢測
│   │   │   ├─persistence_checker.py        # 持久化檢查器
│   │   │   ├─privilege_escalator.py        # 權限提升檢測
│   │   │   └─schemas.py
│   │   ├─function_sast_rust                # SAST 靜態程式碼分析 (Rust)
│   │   │   ├─src
│   │   │   │   ├─analyzers.rs              # 分析器
│   │   │   │   ├─main.rs                   # 主程式
│   │   │   │   ├─models.rs                 # 資料模型
│   │   │   │   ├─parsers.rs                # 解析器
│   │   │   │   ├─rules.rs                  # 規則引擎
│   │   │   │   └─worker.rs                 # 工作處理器
│   │   │   ├─Cargo_optimized.toml          # 優化版 Cargo 配置
│   │   │   ├─Cargo.lock
│   │   │   └─Cargo.toml
│   │   ├─function_sca_go                   # 🚀 SCA 軟體組成分析 (Go) - 已優化
│   │   │   ├─cmd
│   │   │   │   └─worker
│   │   │   │       └─main.go               # 工作處理器入口
│   │   │   ├─internal
│   │   │   │   ├─analyzer                  # 分析器模組
│   │   │   │   │   ├─dependency_analyzer.go  # 依賴分析器（支援 8 語言）
│   │   │   │   │   ├─enhanced_analyzer.go    # 增強版分析器（並發處理）
│   │   │   │   │   ├─enhanced_analyzer.go.backup
│   │   │   │   │   └─enhanced_analyzer.go.broken
│   │   │   │   ├─scanner
│   │   │   │   │   └─sca_scanner.go        # SCA 掃描器
│   │   │   │   └─vulndb                    # 漏洞資料庫
│   │   │   │       └─osv.go                # OSV API 客戶端
│   │   │   ├─pkg
│   │   │   │   ├─models
│   │   │   │   │   └─models.go             # 業務模型
│   │   │   │   └─schemas
│   │   │   │       └─schemas.go            # 統一資料結構（NEW）
│   │   │   ├─.golangci.yml                 # GolangCI-Lint 配置
│   │   │   ├─ARCHITECTURE_TREE.txt         # 架構樹狀圖
│   │   │   ├─GO_SCA_OPTIMIZATION_REPORT.md # Go SCA 優化報告
│   │   │   ├─go.mod
│   │   │   ├─go.sum
│   │   │   ├─MIGRATION_REPORT.md
│   │   │   └─README.md
│   │   ├─function_sqli                     # SQL Injection 注入檢測 (Python)
│   │   │   ├─aiva_func_sqli
│   │   │   │   ├─engines                   # 檢測引擎
│   │   │   │   │   ├─__init__.py
│   │   │   │   │   ├─boolean_detection_engine.py  # 布林盲注檢測
│   │   │   │   │   ├─error_detection_engine.py    # 錯誤注入檢測
│   │   │   │   │   ├─oob_detection_engine.py      # OOB 帶外檢測
│   │   │   │   │   ├─time_detection_engine.py     # 時間盲注檢測
│   │   │   │   │   └─union_detection_engine.py    # UNION 注入檢測
│   │   │   │   ├─__init__.py
│   │   │   │   ├─backend_db_fingerprinter.py      # 後端資料庫指紋識別
│   │   │   │   ├─config.py
│   │   │   │   ├─detection_models.py              # 檢測模型
│   │   │   │   ├─exceptions.py
│   │   │   │   ├─payload_wrapper_encoder.py       # Payload 包裝編碼器
│   │   │   │   ├─result_binder_publisher.py       # 結果發布器
│   │   │   │   ├─schemas.py
│   │   │   │   ├─smart_detection_manager.py       # 智慧檢測管理器
│   │   │   │   ├─task_queue.py
│   │   │   │   ├─telemetry.py                     # 遙測資料收集
│   │   │   │   ├─worker_legacy.py
│   │   │   │   └─worker.py
│   │   │   └─__init__.py
│   │   ├─function_ssrf                     # SSRF 伺服器端請求偽造檢測 (Python)
│   │   │   ├─aiva_func_ssrf
│   │   │   │   ├─__init__.py
│   │   │   │   ├─enhanced_worker.py
│   │   │   │   ├─internal_address_detector.py     # 內部位址檢測器
│   │   │   │   ├─oast_dispatcher.py               # OAST 帶外調度器
│   │   │   │   ├─param_semantics_analyzer.py      # 參數語意分析器
│   │   │   │   ├─result_publisher.py
│   │   │   │   ├─schemas.py
│   │   │   │   ├─smart_ssrf_detector.py           # 智慧 SSRF 檢測器
│   │   │   │   └─worker.py
│   │   │   └─__init__.py
│   │   ├─function_ssrf_go                  # SSRF 檢測 (Go 版本)
│   │   │   ├─cmd
│   │   │   │   └─worker
│   │   │   │       └─main.go
│   │   │   ├─internal
│   │   │   │   └─detector
│   │   │   │       └─ssrf.go
│   │   │   ├─go.mod
│   │   │   ├─go.sum
│   │   │   └─README.md
│   │   ├─function_xss                      # XSS 跨站腳本攻擊檢測 (Python)
│   │   │   ├─aiva_func_xss
│   │   │   │   ├─__init__.py
│   │   │   │   ├─blind_xss_listener_validator.py  # 盲 XSS 監聽驗證器
│   │   │   │   ├─dom_xss_detector.py              # DOM XSS 檢測器
│   │   │   │   ├─payload_generator.py             # Payload 生成器
│   │   │   │   ├─result_publisher.py
│   │   │   │   ├─schemas.py
│   │   │   │   ├─stored_detector.py               # 儲存型 XSS 檢測器
│   │   │   │   ├─task_queue.py
│   │   │   │   ├─traditional_detector.py          # 反射型 XSS 檢測器
│   │   │   │   └─worker.py
│   │   │   └─__init__.py
│   │   ├─migrate_all_go_services.ps1       # 批次遷移所有 Go 服務
│   │   ├─migrate_go_service.ps1            # Go 服務遷移腳本
│   │   ├─MIGRATION_GUIDE.md                # 遷移指南
│   │   └─verify_go_builds.ps1              # 驗證 Go 建置腳本
│   ├─integration                           # ⭐ 整合模組（四大模組之一）
│   │   ├─aiva_integration
│   │   │   ├─analysis                      # 分析引擎
│   │   │   │   ├─__init__.py
│   │   │   │   ├─compliance_policy_checker.py     # 合規性政策檢查器
│   │   │   │   ├─risk_assessment_engine_enhanced.py # 增強版風險評估引擎
│   │   │   │   ├─risk_assessment_engine.py        # 風險評估引擎
│   │   │   │   └─vuln_correlation_analyzer.py     # 漏洞關聯分析器
│   │   │   ├─attack_path_analyzer          # 攻擊路徑分析器
│   │   │   │   ├─__init__.py
│   │   │   │   ├─engine.py                        # 分析引擎
│   │   │   │   ├─graph_builder.py                 # 攻擊圖建構器
│   │   │   │   ├─nlp_recommender.py               # NLP 推薦器
│   │   │   │   ├─README.md
│   │   │   │   └─visualizer.py                    # 視覺化工具
│   │   │   ├─config_template               # 配置範本
│   │   │   │   ├─__init__.py
│   │   │   │   └─config_template_manager.py       # 配置範本管理器
│   │   │   ├─examples                      # 使用範例
│   │   │   │   ├─enhanced_attack_path_demo.py
│   │   │   │   ├─enhanced_risk_assessment_demo.py
│   │   │   │   └─enhanced_scan_integration.py
│   │   │   ├─middlewares                   # 中介軟體
│   │   │   │   ├─__init__.py
│   │   │   │   └─rate_limiter.py                  # 速率限制器
│   │   │   ├─observability                 # 可觀測性
│   │   │   │   ├─__init__.py
│   │   │   │   └─metrics.py                       # 指標收集
│   │   │   ├─perf_feedback                 # 效能回饋
│   │   │   │   ├─__init__.py
│   │   │   │   ├─improvement_suggestion_generator.py  # 改進建議生成器
│   │   │   │   └─scan_metadata_analyzer.py            # 掃描元資料分析器
│   │   │   ├─reception                     # 資料接收層
│   │   │   │   ├─__init__.py
│   │   │   │   ├─data_reception_layer.py          # 資料接收層
│   │   │   │   ├─lifecycle_manager.py             # 生命週期管理器
│   │   │   │   ├─models_enhanced.py               # 增強版資料模型
│   │   │   │   └─sql_result_database.py           # SQL 結果資料庫
│   │   │   ├─remediation                   # 修復建議
│   │   │   │   ├─__init__.py
│   │   │   │   ├─code_fixer.py                    # 程式碼修復器
│   │   │   │   ├─config_recommender.py            # 配置建議器
│   │   │   │   ├─patch_generator.py               # 補丁生成器
│   │   │   │   └─report_generator.py              # 報告生成器
│   │   │   ├─reporting                     # 報告系統
│   │   │   │   ├─__init__.py
│   │   │   │   ├─formatter_exporter.py            # 格式化輸出器
│   │   │   │   ├─report_content_generator.py      # 報告內容生成器
│   │   │   │   └─report_template_selector.py      # 報告範本選擇器
│   │   │   ├─security                      # 安全模組
│   │   │   │   ├─__init__.py
│   │   │   │   └─auth.py                          # 認證授權
│   │   │   ├─threat_intel                  # 威脅情報
│   │   │   │   ├─threat_intel
│   │   │   │   │   ├─__init__.py
│   │   │   │   │   ├─intel_aggregator.py          # 情報聚合器
│   │   │   │   │   ├─ioc_enricher.py              # IOC 豐富化
│   │   │   │   │   └─mitre_mapper.py              # MITRE ATT&CK 映射器
│   │   │   │   └─__init__.py
│   │   │   ├─__init__.py
│   │   │   ├─app.py                               # 整合服務主應用
│   │   │   └─settings.py                          # 設定檔
│   │   ├─alembic                           # 資料庫遷移工具
│   │   │   ├─versions
│   │   │   │   └─001_initial_schema.py            # 初始資料庫結構
│   │   │   └─env.py                               # Alembic 環境配置
│   │   ├─api_gateway                       # API 閘道
│   │   │   └─api_gateway
│   │   │       └─app.py                           # 閘道主應用
│   │   └─alembic.ini                              # Alembic 配置檔
│   ├─scan                                  # ⭐ 掃描模組（四大模組之一）
│   │   ├─aiva_scan                         # 主要掃描引擎 (Python)
│   │   │   ├─core_crawling_engine          # 核心爬蟲引擎
│   │   │   │   ├─__init__.py
│   │   │   │   ├─http_client_hi.py                # HTTP 客戶端
│   │   │   │   ├─static_content_parser.py         # 靜態內容解析器
│   │   │   │   └─url_queue_manager.py             # URL 佇列管理器
│   │   │   ├─dynamic_engine                # 動態內容引擎
│   │   │   │   ├─__init__.py
│   │   │   │   ├─ajax_api_handler.py              # AJAX API 處理器
│   │   │   │   ├─dynamic_content_extractor.py     # 動態內容提取器
│   │   │   │   ├─example_browser_pool.py
│   │   │   │   ├─example_extractor.py
│   │   │   │   ├─example_usage.py
│   │   │   │   ├─example_usage.py.backup
│   │   │   │   ├─headless_browser_pool.py         # 無頭瀏覽器池
│   │   │   │   └─js_interaction_simulator.py      # JS 互動模擬器
│   │   │   ├─info_gatherer                 # 資訊收集器
│   │   │   │   ├─__init__.py
│   │   │   │   ├─javascript_source_analyzer.py    # JavaScript 原始碼分析器
│   │   │   │   ├─passive_fingerprinter.py         # 被動式指紋識別
│   │   │   │   └─sensitive_info_detector.py       # 敏感資訊檢測器
│   │   │   ├─__init__.py
│   │   │   ├─authentication_manager.py            # 身份驗證管理器
│   │   │   ├─config_control_center.py             # 配置控制中心
│   │   │   ├─fingerprint_manager.py               # 指紋管理器
│   │   │   ├─header_configuration.py              # HTTP 標頭配置
│   │   │   ├─javascript_analyzer.py               # JavaScript 分析器
│   │   │   ├─migration_plan_dynamic_engine.md     # 動態引擎遷移計畫
│   │   │   ├─multi_language_architecture_plan.md  # 多語言架構計畫
│   │   │   ├─persistent_queue_design.md           # 持久化佇列設計
│   │   │   ├─scan_context.py                      # 掃描上下文
│   │   │   ├─scan_orchestrator_migration_plan.md  # 掃描協調器遷移計畫
│   │   │   ├─scan_orchestrator.py                 # 掃描協調器
│   │   │   ├─schemas.py
│   │   │   ├─scope_manager.py                     # 範圍管理器
│   │   │   ├─sensitive_data_scanner.py            # 敏感資料掃描器
│   │   │   ├─strategy_controller.py               # 策略控制器
│   │   │   ├─worker_refactored.py
│   │   │   └─worker.py
│   │   ├─aiva_scan_node                    # Node.js 掃描引擎
│   │   │   ├─src
│   │   │   │   ├─interfaces
│   │   │   │   │   └─dynamic-scan.interfaces.ts   # 動態掃描介面
│   │   │   │   ├─services
│   │   │   │   │   ├─enhanced-content-extractor.service.ts   # 增強版內容提取器
│   │   │   │   │   ├─enhanced-dynamic-scan.service.ts        # 增強版動態掃描
│   │   │   │   │   ├─interaction-simulator.service.ts        # 互動模擬器
│   │   │   │   │   ├─network-interceptor.service.ts          # 網路攔截器
│   │   │   │   │   └─scan-service.ts                         # 掃描服務
│   │   │   │   ├─utils
│   │   │   │   │   └─logger.ts                               # 日誌工具
│   │   │   │   └─index.ts
│   │   │   ├─package-lock.json
│   │   │   ├─package.json
│   │   │   ├─README.md
│   │   │   └─tsconfig.json                        # TypeScript 配置
│   │   └─info_gatherer_rust                # Rust 資訊收集器
│   │       ├─src
│   │       │   ├─git_history_scanner.rs           # Git 歷史掃描器
│   │       │   ├─main.rs
│   │       │   ├─scanner.rs                       # 掃描器
│   │       │   └─secret_detector.rs               # 密鑰檢測器
│   │       ├─Cargo.toml
│   │       └─README.md
│   └─__init__.py
├─tools                                     # 開發工具集
│   ├─analyze_codebase.py                   # 程式碼庫分析工具
│   ├─find_non_cp950_filtered.py            # 尋找非 CP950 字元
│   ├─generate_mermaid_diagrams.py          # Mermaid 圖表生成器
│   ├─markdown_check.py                     # Markdown 格式檢查
│   ├─py2mermaid.py                         # Python 轉 Mermaid
│   ├─README.md
│   ├─replace_emoji.py                      # Emoji 替換工具
│   ├─replace_non_cp950.py                  # 非 CP950 字元替換
│   └─update_imports.py                     # Import 更新工具
├─__init__.py
├─.editorconfig                             # 編輯器配置
├─.env.example                              # 環境變數範例
├─.gitignore                                # Git 忽略清單
├─.pre-commit-config.yaml                   # Pre-commit 鉤子配置
├─.pylintrc                                 # Pylint 配置
├─analyze_core_modules.py                   # 核心模組分析腳本
├─analyze_crypto_security_v2.ps1            # 密碼學安全分析 v2
├─analyze_crypto_security.ps1               # 密碼學安全分析
├─check_status.ps1                          # 狀態檢查腳本
├─DELIVERY_SUMMARY.md                       # 交付摘要
├─demo_bio_neuron_agent.py                  # 生物神經元代理示範
├─demo_ui_panel.py                          # UI 面板示範
├─deploy_services.ps1                       # 服務部署腳本
├─enhance_cspm_service.ps1                  # 增強 CSPM 服務
├─enhance_python_types.py                   # Python 型別增強
├─enhance_sca_service.ps1                   # 增強 SCA 服務
├─ENHANCED_FEATURES_QUICKSTART.md           # 增強功能快速入門
├─ENHANCEMENT_IMPLEMENTATION_REPORT.md      # 增強實作報告
├─fix_authn_models.ps1                      # 修正身份驗證模型
├─fix_authn_schemas.ps1                     # 修正身份驗證 Schema
├─generate_clean_tree.ps1                   # 生成乾淨樹狀圖（本腳本）
├─generate_project_report.ps1               # 生成專案報告（PowerShell）
├─generate_project_report.sh                # 生成專案報告（Bash）
├─generate_stats.ps1                        # 生成統計資訊
├─GO_MIGRATION_REPORT.md                    # Go 遷移報告
├─implement_error_tracking.ps1              # 實作錯誤追蹤
├─init_go_common.ps1                        # 初始化 Go 共用庫
├─init_go_deps.ps1                          # 初始化 Go 依賴
├─migrate_sca_service.ps1                   # 遷移 SCA 服務
├─MODULE_UNIFICATION_STRATEGY.md            # 模組統一策略
├─MULTILANG_IMPLEMENTATION_REPORT.md        # 多語言實作報告
├─MULTILANG_STRATEGY_SUMMARY.md             # 多語言策略摘要
├─MULTILANG_STRATEGY.md                     # 多語言策略
├─mypy.ini                                  # MyPy 型別檢查配置
├─NAMING_STANDARDS.md                       # 命名標準
├─optimize_ssrf_service.ps1                 # 優化 SSRF 服務
├─PHASE2_PROGRESS_UPDATE.md                 # 第二階段進度更新
├─PROGRESS_DASHBOARD.md                     # 進度儀表板
├─pyproject.toml                            # Python 專案配置
├─pyrightconfig.json                        # Pyright 配置
├─README.md                                 # 專案說明文件
├─ROADMAP_NEXT_10_WEEKS.md                  # 未來 10 週路線圖
├─ruff.toml                                 # Ruff Linter 配置
├─schema_analysis_report.md                 # Schema 分析報告
├─schema_implementation_report.md           # Schema 實作報告
├─SCHEMAS_COMPLETION_REPORT.md              # Schema 完成報告
├─SCHEMAS_ENUMS_UNIFICATION_REPORT.md       # Schema 列舉統一報告
├─setup_env.bat                             # 環境設定批次檔
├─setup_monitoring.ps1                      # 設定監控
├─setup_multilang.ps1                       # 設定多語言環境
├─start_all_multilang.ps1                   # 啟動所有多語言服務
├─start_all.ps1                             # 啟動所有服務
├─start_dev.bat                             # 啟動開發環境
├─start_ui_auto.ps1                         # 自動啟動 UI
├─start_ui_auto.py                          # 自動啟動 UI（Python）
├─stop_all_multilang.ps1                    # 停止所有多語言服務
├─stop_all.ps1                              # 停止所有服務
├─test_ai_integration.py                    # AI 整合測試
├─test_enhanced_sca.ps1                     # 測試增強版 SCA
├─test_scan.ps1                             # 測試掃描功能
└─UI_LAUNCH_GUIDE.md                        # UI 啟動指南

================================================================================
技術棧總覽
================================================================================
📌 程式語言:
   • Python 3.11+ (核心、功能、整合模組)
   • Go 1.21+ (高效能功能模組: SCA, SSRF, CSPM, Crypto, AuthN)
   • Rust (SAST 靜態分析、資訊收集)
   • TypeScript/Node.js (動態掃描引擎)

📌 框架與工具:
   • FastAPI (Python Web 框架)
   • RabbitMQ (訊息佇列)
   • PostgreSQL (關係型資料庫)
   • Redis (快取與會話管理)
   • Docker (容器化部署)
   • Alembic (資料庫遷移)

📌 安全檢測能力:
   • SQL Injection (5 種檢測引擎)
   • XSS (反射型、儲存型、DOM 型)
   • SSRF (內外部位址檢測、OAST)
   • IDOR (資源 ID 提取與驗證)
   • SCA (8 語言依賴掃描、OSV 漏洞資料庫)
   • SAST (靜態程式碼分析)
   • CSPM (雲端安全態勢管理)
   • Crypto (密碼學弱點檢測)
   • AuthN (身份驗證暴力破解)

📌 AI 能力:
   • 生物神經元核心
   • 動態策略調整
   • 風險評估引擎
   • 攻擊路徑分析
   • NLP 自然語言生成

================================================================================
檔案統計摘要
================================================================================
Python 檔案: ~250 個
Go 檔案: ~15 個
Rust 檔案: ~10 個
TypeScript 檔案: ~10 個
配置檔案: ~30 個
文件檔案: ~45 個

總計: 360 個檔案，107 個目錄

================================================================================
結束標記
================================================================================
樹狀圖生成完成 ✅
