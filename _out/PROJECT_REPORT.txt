╔══════════════════════════════════════════════════════════════════════════════╗
║                         AIVA 專案完整分析報告                                 ║
╚══════════════════════════════════════════════════════════════════════════════╝

生成時間: 2025-10-13 14:10:59
專案路徑: /workspaces/AIVA

═══════════════════════════════════════════════════════════════════════════════
📊 專案統計摘要
═══════════════════════════════════════════════════════════════════════════════

總文件數量: 1145
總程式碼行數: 34438
程式碼檔案數: 199

───────────────────────────────────────────────────────────────────────────────
💻 多語言程式碼統計
───────────────────────────────────────────────────────────────────────────────

🐍 Python
   檔案數: 168 個
   程式碼行數: 29562 行
   平均每個檔案: 176.0 行
   佔比: 85.8%

🔷 Go
   檔案數: 18 個
   程式碼行數: 2972 行
   平均每個檔案: 165.1 行
   佔比: 8.6%

🦀 Rust
   檔案數: 10 個
   程式碼行數: 1552 行
   平均每個檔案: 155.2 行
   佔比: 4.5%

📘 TypeScript/JavaScript
   檔案數: 3 個
   程式碼行數: 352 行
   佔比: 1.0%

───────────────────────────────────────────────────────────────────────────────
📈 專案規模分析
───────────────────────────────────────────────────────────────────────────────

語言分布:
  Python:     85.8% ████████████████████
  Go:         8.6%
  Rust:       4.5%
  TS/JS:      1.0%

───────────────────────────────────────────────────────────────────────────────
🚫 已排除的目錄類型
───────────────────────────────────────────────────────────────────────────────

  • .git
  • __pycache__
  • .mypy_cache
  • .ruff_cache
  • node_modules
  • .venv
  • venv
  • .pytest_cache
  • .tox
  • dist
  • build
  • .egg-info
  • .eggs
  • htmlcov
  • .coverage
  • .hypothesis
  • .idea
  • .vscode
  • target
  • emoji_backups

═══════════════════════════════════════════════════════════════════════════════
🌳 專案目錄結構
═══════════════════════════════════════════════════════════════════════════════

詳細樹狀結構請參考: tree_ascii.txt

基本結構:
  services/
    ├── aiva_common/     共用模組
    ├── core/            核心引擎
    ├── function/        功能模組 (Python, Go, Rust)
    ├── integration/     整合層
    └── scan/            掃描引擎 (Python, TypeScript)

═══════════════════════════════════════════════════════════════════════════════
🏗️ 專案架構說明
═══════════════════════════════════════════════════════════════════════════════

多語言架構設計:
  • Python: 主要業務邏輯、Web API、核心引擎
  • Go: 高效能模組 (身份驗證、雲端安全、組成分析)
  • Rust: 靜態分析、資訊收集 (記憶體安全、高效能)
  • TypeScript: 動態掃描引擎 (Playwright 瀏覽器自動化)

技術棧詳細資訊:
  • 詳細架構圖請參考: ARCHITECTURE_DIAGRAMS.md
  • 程式碼分析請參考: _out/analysis/ 目錄

═══════════════════════════════════════════════════════════════════════════════
📌 報告說明
═══════════════════════════════════════════════════════════════════════════════

• 本報告整合了專案的檔案統計、程式碼行數分析和目錄結構
• 已自動排除虛擬環境、快取檔案、IDE 配置等非程式碼目錄
• 圖示說明:
  🐍 Python   📜 JavaScript   📘 TypeScript   📝 Markdown
  ⚙️ JSON      🔧 YAML         🗄️ SQL          ⚡ Shell/Batch
  🔷 Go        🦀 Rust         🌐 HTML         🎨 CSS
  📁 目錄      📄 其他檔案

• 多語言架構:
  - Python: 主要業務邏輯、Web API、核心引擎
  - Go: 高效能模組 (身份驗證、雲端安全、組成分析)
  - Rust: 靜態分析、資訊收集 (記憶體安全、高效能)
  - TypeScript: 動態掃描引擎 (Playwright 瀏覽器自動化)

═══════════════════════════════════════════════════════════════════════════════
✨ 報告結束
═══════════════════════════════════════════════════════════════════════════════
