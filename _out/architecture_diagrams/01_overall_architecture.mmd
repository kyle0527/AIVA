# 整體系統架構 | Overall System Architecture

```mermaid
graph TB
    subgraph "🎨 前端層 Frontend Layer"
        UI["🖥️ Web UI<br/>網頁介面<br/><i>FastAPI + React</i>"]
        API["🔌 REST API<br/>REST 接口<br/><i>OpenAPI 3.0</i>"]
    end

    subgraph "🤖 核心層 Core Layer"
        CORE["⚡ AI Core Engine<br/>AI 核心引擎<br/><i>Bio Neuron Network</i>"]
        STRATEGY["📋 Strategy Generator<br/>策略生成器<br/><i>Dynamic Planning</i>"]
        TASK["📦 Task Manager<br/>任務管理器<br/><i>Multi-threading</i>"]
    end

    subgraph "🔍 掃描層 Scan Layer"
        SCAN_PY["🐍 Python Scanner<br/>Python 掃描器<br/><i>Requests + aiohttp</i>"]
        SCAN_TS["📘 TypeScript Scanner<br/>TypeScript 掃描器<br/><i>Playwright</i>"]
        SCAN_RS["🦀 Rust Info Gatherer<br/>Rust 資訊收集<br/><i>High Performance</i>"]
    end

    subgraph "⚡ 檢測層 Detection Layer"
        FUNC_PY["🐍 Python Functions<br/>Python 檢測模組<br/><i>SQLi, XSS, IDOR</i>"]
        FUNC_GO["🔷 Go Functions<br/>Go 檢測模組<br/><i>AuthN, CSPM, SCA</i>"]
        FUNC_RS["🦀 Rust Functions<br/>Rust 檢測模組<br/><i>SAST, Deserialization</i>"]
    end

    subgraph "🔗 整合層 Integration Layer"
        INTG["🔧 Integration Service<br/>整合服務<br/><i>Result Aggregation</i>"]
        REPORT["📊 Report Generator<br/>報告生成器<br/><i>HTML/PDF/JSON</i>"]
        ANALYSIS["🎯 Risk Analyzer<br/>風險分析器<br/><i>CVSS Scoring</i>"]
    end

    subgraph "💾 資料層 Data Layer"
        DB[("🗄️ PostgreSQL<br/>資料庫<br/><i>Primary Storage</i>")]
        MQ["📨 RabbitMQ<br/>訊息佇列<br/><i>Task Distribution</i>"]
        REDIS[("⚡ Redis<br/>快取<br/><i>Session & Cache</i>")]
    end

    UI -->|HTTP Request| API
    API -->|Task Creation| CORE
    CORE -->|Strategy| STRATEGY
    CORE -->|Dispatch| TASK
    
    TASK -->|Scan Job| SCAN_PY
    TASK -->|Dynamic Scan| SCAN_TS
    TASK -->|Info Collection| SCAN_RS
    
    SCAN_PY -->|Targets| MQ
    SCAN_TS -->|DOM Data| MQ
    SCAN_RS -->|Secrets| MQ
    
    MQ -->|Detection Job| FUNC_PY
    MQ -->|Detection Job| FUNC_GO
    MQ -->|Detection Job| FUNC_RS
    
    FUNC_PY -->|Results| MQ
    FUNC_GO -->|Results| MQ
    FUNC_RS -->|Results| MQ
    
    MQ -->|Aggregation| INTG
    INTG -->|Generate| REPORT
    INTG -->|Assess| ANALYSIS
    
    CORE -.->|State| DB
    INTG -.->|Store| DB
    API -.->|Cache| REDIS
    
    style UI fill:#E3F2FD,stroke:#1976D2,stroke-width:3px
    style API fill:#E3F2FD,stroke:#1976D2,stroke-width:3px
    style CORE fill:#FFF9C4,stroke:#F57F17,stroke-width:3px
    style STRATEGY fill:#FFF9C4,stroke:#F57F17,stroke-width:2px
    style TASK fill:#FFF9C4,stroke:#F57F17,stroke-width:2px
    style SCAN_PY fill:#C8E6C9,stroke:#388E3C,stroke-width:2px
    style SCAN_TS fill:#B3E5FC,stroke:#0277BD,stroke-width:2px
    style SCAN_RS fill:#FFCCBC,stroke:#D84315,stroke-width:2px
    style FUNC_PY fill:#E1BEE7,stroke:#7B1FA2,stroke-width:2px
    style FUNC_GO fill:#B3E5FC,stroke:#0277BD,stroke-width:2px
    style FUNC_RS fill:#FFCCBC,stroke:#D84315,stroke-width:2px
    style INTG fill:#FFE0B2,stroke:#E65100,stroke-width:3px
    style REPORT fill:#FFE0B2,stroke:#E65100,stroke-width:2px
    style ANALYSIS fill:#FFE0B2,stroke:#E65100,stroke-width:2px
    style DB fill:#CFD8DC,stroke:#455A64,stroke-width:3px
    style MQ fill:#FFECB3,stroke:#F57F17,stroke-width:3px
    style REDIS fill:#CFD8DC,stroke:#455A64,stroke-width:3px
    
    linkStyle default stroke:#666,stroke-width:2px
```

---
**Generated by**: AIVA Architecture Diagram Generator
**Timestamp**: 2025-10-13 14:40:20
