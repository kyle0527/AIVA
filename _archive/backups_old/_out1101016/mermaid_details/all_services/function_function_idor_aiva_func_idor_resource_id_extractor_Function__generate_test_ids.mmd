flowchart TB
    n1([開始])
    n2([結束])
    n3[&amp;&#35;39;\n        Generate test ID variations based ...]
    n4[test_ids: list&#91;str&#93; = &#91;&#93;]
    n5{if original_id.pattern == &amp;&#35;39;num...}
    n6[try]
    n7[base = int&#40;original_id.valu...]
    n8[offsets = &#91;-2, -1, 1, 2, 10, 1...]
    n9{for offset in offsets}
    n10[new_id = base + offset]
    n11{if new_id &amp;gt; 0}
    n12[test_ids.append&#40;str&#40;new_id&#41;&#41;]
    n13[]
    n14{if len&#40;test_ids&#41; &amp;gt;= count}
    n15[break]
    n16[]
    n17[]
    n18[]
    n19[except ValueError]
    n20[pass]
    n21{if original_id.pattern == &amp;&#35;39;uuid&amp;&#35;39;}
    n22[import random]
    n23[parts = original_id.value.sp...]
    n24{for _ in range&#40;count&#41;}
    n25[modified = parts.copy&#40;&#41;]
    n26[modified&#91;0&#93; = f&amp;&#35;39;&#123;random.randint&...]
    n27[test_ids.append&#40;&amp;&#35;39;-&amp;&#35;39;.join&#40;...]
    n28[]
    n29{if original_id.pattern == &amp;&#35;39;hash&amp;&#35;39;}
    n30[import hashlib]
    n31[import random]
    n32[length = len&#40;original_id.valu...]
    n33{for i in range&#40;count&#41;}
    n34[random_str = f&amp;&#35;39;test_&#123;random.randi...]
    n35{if length == 32}
    n36[test_hash = hashlib.md5&#40;random_s...]
    n37[test_hash = hashlib.sha256&#40;rando...]
    n38[]
    n39[test_ids.append&#40;test_hash&#41;]
    n40[]
    n41{if original_id.pattern == &amp;&#35;39;mixed&amp;&#35;39;}
    n42[import random]
    n43[unique_ids: set&#91;str&#93; = set&#40;&#41;]
    n44[attempts = 0]
    n45[max_attempts = count * 10]
    n46{while len&#40;unique_ids&#41; &amp;lt; coun...}
    n47[result = &amp;&#35;39;&amp;&#35;39;]
    n48{for char in original_id.value}
    n49{if char.isdigit&#40;&#41;}
    n50[result += str&#40;random.randint&#40;0, 9&#41;&#41;]
    n51[result += char]
    n52[]
    n53[]
    n54{if result != original_id.value}
    n55[unique_ids.add&#40;result&#41;]
    n56[]
    n57[attempts += 1]
    n58[]
    n59[test_ids.extend&#40;list&#40;unique_ids&#41;&#41;]
    n60[]
    n61[]
    n62[]
    n63[]
    n64[return test_ids&#91;:count&#93;]
    n1 --> n3
    n3 --> n4
    n4 --> n5
    n5 -->|Yes| n6
    n5 -->|No| n21
    n6 --> n7
    n6 --> n19
    n7 --> n8
    n8 --> n9
    n9 -->|Yes| n10
    n9 -->|No| n17
    n10 --> n11
    n11 -->|Yes| n12
    n11 -->|No| n13
    n12 --> n13
    n13 --> n14
    n14 -->|Yes| n15
    n14 -->|No| n16
    n15 --> n16
    n16 --> n9
    n17 --> n18
    n18 --> n63
    n19 --> n20
    n20 --> n18
    n21 -->|Yes| n22
    n21 -->|No| n29
    n22 --> n23
    n23 --> n24
    n24 -->|Yes| n25
    n24 -->|No| n28
    n25 --> n26
    n26 --> n27
    n27 --> n24
    n28 --> n62
    n29 -->|Yes| n30
    n29 -->|No| n41
    n30 --> n31
    n31 --> n32
    n32 --> n33
    n33 -->|Yes| n34
    n33 -->|No| n40
    n34 --> n35
    n35 -->|Yes| n36
    n35 -->|No| n37
    n36 --> n38
    n37 --> n38
    n38 --> n39
    n39 --> n33
    n40 --> n61
    n41 -->|Yes| n42
    n41 -->|No| n60
    n42 --> n43
    n43 --> n44
    n44 --> n45
    n45 --> n46
    n46 -->|Yes| n47
    n46 -->|No| n58
    n47 --> n48
    n48 -->|Yes| n49
    n48 -->|No| n53
    n49 -->|Yes| n50
    n49 -->|No| n51
    n50 --> n52
    n51 --> n52
    n52 --> n48
    n53 --> n54
    n54 -->|Yes| n55
    n54 -->|No| n56
    n55 --> n56
    n56 --> n57
    n57 --> n46
    n58 --> n59
    n59 --> n60
    n60 --> n61
    n61 --> n62
    n62 --> n63
    n63 --> n64
    n64 --> n2