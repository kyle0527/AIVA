files_checked: 169
issues_found: 98
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	202	        print(f"🚀 收到新任務: {query}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	206	        print("📚 [步驟 1/5] RAG 知識檢索")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	208	        print(f"   ✓ 檢索到 {len(retrieved_chunks)} 個相關程式碼片段:")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	221	        print("\n🔢 [步驟 2/5] 查詢與上下文編碼")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	228	        print(f"   ✓ 生成 512 維嵌入向量 (種子: {seed})")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	231	        print("\n🧠 [步驟 3/5] 生物神經網路決策")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	233	        print(f"   ✓ 決策邏輯值範圍: [{decision_logits.min():.2f}, {decision_logits.max():.2f}]")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	236	        print("\n� [步驟 4/5] 計算決策信心度")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	239	        print("   ℹ️  已停用信心度檢查,所有決策都會執行")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	242	        print("\n🔧 [步驟 5/5] 工具選擇與執行")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	248	        print(f"   ✓ 選擇工具: {chosen_tool_name}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	249	        print(f"   ✓ 工具描述: {chosen_tool['description']}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	250	        print(f"   ✓ 選擇信心度: {tool_confidence:.2%}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	255	            print("\n   ⚙️  正在執行工具...")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	257	            print(f"   ✓ 工具執行完成: {tool_result.get('status', 'unknown')}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	263	            print("   ❌ 工具未實作")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	277	        print("✅ 任務完成!")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__analysis__strategy_generator.py	44	        logger.info("🎯 RuleBasedStrategyGenerator initialized")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__analysis__strategy_generator.py	61	        logger.info(f"🎯 Generating test strategy for scan {attack_surface.scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__analysis__strategy_generator.py	76	                f"⚠️  Total tasks ({total_tasks}) exceeds limit "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__analysis__strategy_generator.py	101	            f"✅ Strategy generated: {strategy.total_tasks} tasks "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	63	    logger.info("🚀 AIVA Core Engine starting up...")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	64	    logger.info("📊 Initializing analysis components...")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	65	    logger.info("🔄 Starting message processing loops...")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	99	    logger.info("📡 Starting scan results processor...")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	112	            logger.info(f"🔍 [Stage 1/7] Processing scan results for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	127	                f"📥 [Stage 1/7] Data ingested - "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	134	            logger.info(f"🔍 [Stage 2/7] Analyzing attack surface for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	147	                f"📋 [Stage 2/7] Attack surface identified - "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	153	            logger.info(f"🎯 [Stage 3/7] Generating test strategy for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	165	                f"📝 [Stage 3/7] Base strategy generated - "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	171	                f"⚙️ [Stage 4/7] Adjusting strategy based on context for {scan_id}"
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	188	                f"🔧 [Stage 4/7] Strategy adjusted - "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	193	            logger.info(f"⚡ [Stage 5/7] Generating tasks for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	205	                f"📦 [Stage 5/7] Tasks generated - "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	211	            logger.info(f"📤 [Stage 6/7] Dispatching tasks for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	237	            logger.info(f"🚀 [Stage 6/7] Dispatched {dispatched_count} tasks")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	240	            logger.info(f"👁️ [Stage 7/7] Monitoring execution for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	260	            logger.info(f"✅ [Stage 7/7] All stages completed for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	263	            logger.error(f"❌ Error processing scan results: {e}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	271	    logger.info("🔄 Starting function results processor...")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	288	            logger.info(f"📊 Received result from {msg.header.source_module}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	302	            logger.error(f"❌ Error processing function result: {e}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	307	    logger.info("📈 Starting execution status monitor...")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	319	                logger.warning(f"⚠️ System health issue: {system_status}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__app.py	322	            logger.error(f"❌ Error in status monitoring: {e}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ui_panel__server.py	127	                <h1>🚀 AIVA Control Panel</h1>
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ui_panel__server.py	141	                        <div class="value">{'✓' if stats['ai_enabled'] else '✗'}</div>
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ui_panel__server.py	152	                    <h2>📡 API 端點</h2>
c:\D\E\AIVA\AIVA-main\emoji_backups\services__core__aiva_core__ui_panel__server.py	160	                    <h2>📖 使用說明</h2>
c:\D\E\AIVA\AIVA-main\emoji_backups\services__function__function_idor__aiva_func_idor__worker.py	185	                        f"🚨 檢測到 IDOR 漏洞: {test_url} "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__function__function_idor__aiva_func_idor__worker.py	247	                    f"🚨 檢測到 BFLA 漏洞: {url_str} "
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__dynamic_engine__example_browser_pool.py	24	        print("✓ 瀏覽器池初始化完成")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__dynamic_engine__example_browser_pool.py	31	                print(f"✓ 頁面標題: {title}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__dynamic_engine__example_browser_pool.py	33	                print("✓ 在模擬模式下運行（未安裝 Playwright）")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__dynamic_engine__example_browser_pool.py	45	        print("\n✓ 瀏覽器池已關閉")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__dynamic_engine__example_browser_pool.py	235	            print(f"✓ 捕獲到預期錯誤: {e}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__dynamic_engine__example_browser_pool.py	245	            print(f"✓ 捕獲到預期錯誤: {e}")
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__dynamic_engine__example_usage.py	35	        status = "✓" if result.success else "✗"
c:\D\E\AIVA\AIVA-main\emoji_backups\services__scan__aiva_scan__info_gatherer__javascript_source_analyzer.py	541	                    lines.append(f"  ⚠️  {sink.tainted_source}")
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	10	    '✅': '[已]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	11	    '❌': '[失敗]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	12	    '⚠️': '[警告]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	13	    '⚠': '[警告]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	14	    '📁': '[目錄]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	15	    '🎉': '[完成]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	16	    '🚀': '[啟動]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	17	    '📊': '[統計]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	18	    '🔄': '[循環]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	19	    '📡': '[連線]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	20	    '📥': '[接收]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	21	    '📋': '[列表]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	22	    '🎯': '[目標]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	23	    '📝': '[記錄]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	24	    '⚙️': '[設定]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	25	    '⚙': '[設定]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	26	    '🔧': '[調整]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	27	    '⚡': '[快速]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	28	    '👁️': '[監控]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	29	    'ℹ️': '[資訊]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	30	    '✗': '[X]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	31	    '✓': '[V]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	32	    '📚': '[資料]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	33	    '🔢': '[數值]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	34	    '🧠': '[神經網路]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	35	    '🚨': '[警報]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__replace_emoji.py	36	    '📖': '[說明]',
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__update_imports.py	37	            print(f"✅ 已更新: {file_path}")
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__update_imports.py	43	        print(f"❌ 更新失敗 {file_path}: {e}")
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__update_imports.py	64	            print(f"⚠️ 目錄不存在: {directory}")
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__update_imports.py	67	        print(f"\n📁 處理目錄: {directory}")
c:\D\E\AIVA\AIVA-main\emoji_backups\tools__update_imports.py	74	    print(f"\n🎉 更新完成！共更新了 {len(updated_files)} 個檔案")
c:\D\E\AIVA\AIVA-main\emoji_backups2\services__core__aiva_core__ai_engine__bio_neuron_core_v2.py	236	        print("\n� [步驟 4/5] 計算決策信心度")
c:\D\E\AIVA\AIVA-main\emoji_backups2\services__core__aiva_core__app.py	112	            logger.info(f"🔍 [Stage 1/7] Processing scan results for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups2\services__core__aiva_core__app.py	134	            logger.info(f"🔍 [Stage 2/7] Analyzing attack surface for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups2\services__core__aiva_core__app.py	205	                f"📦 [Stage 5/7] Tasks generated - "
c:\D\E\AIVA\AIVA-main\emoji_backups2\services__core__aiva_core__app.py	211	            logger.info(f"📤 [Stage 6/7] Dispatching tasks for {scan_id}")
c:\D\E\AIVA\AIVA-main\emoji_backups2\services__core__aiva_core__app.py	307	    logger.info("📈 Starting execution status monitor...")
