# ============================================
# AIVA Docker Build Context 過濾規則
# 策略：排除開發/文檔檔案，保留運行時必要檔案
# ============================================

# -------------------------------------------
# 1. 版本控制系統
# -------------------------------------------
.git
.gitignore
.github

# -------------------------------------------
# 2. 文檔和輸出 (150+ MD 檔案)
# -------------------------------------------
*.md
docs/
_out/
image/

# -------------------------------------------
# 3. 開發工具和腳本 (非運行時)
# -------------------------------------------
tools/
scripts/
utilities/
examples/

# -------------------------------------------
# 4. 測試框架 (測試用，非運行時)
# -------------------------------------------
testing/

# -------------------------------------------
# 5. 報告和日誌
# -------------------------------------------
reports/
logs/
*_REPORT.json
*_report_*.json
aiva_connectivity_report_*.json
COMPREHENSIVE_INTEGRATION_TEST_REPORT.json
*.log
integration_test.log

# -------------------------------------------
# 6. 歷史和備份
# -------------------------------------------
_archive/
backup/

# -------------------------------------------
# 7. Python 虛擬環境
# -------------------------------------------
venv/
.venv/
env/
ENV/

# -------------------------------------------
# 8. Python 快取檔案
# -------------------------------------------
__pycache__/
*.py[cod]
*$py.class
.pytest_cache/
.mypy_cache/
.ruff_cache/
*.pyc

# -------------------------------------------
# 9. IDE 配置
# -------------------------------------------
.vscode/
.idea/
*.swp
*.swo

# -------------------------------------------
# 10. 作業系統檔案
# -------------------------------------------
.DS_Store
Thumbs.db

# -------------------------------------------
# 11. Docker 和 Kubernetes 配置 (已在外部)
# -------------------------------------------
Dockerfile*
.dockerignore
docker-compose*.yml
docker/
k8s/
helm/

# -------------------------------------------
# 12. 建置產物
# -------------------------------------------
build/
dist/
*.egg-info/
target/

# -------------------------------------------
# 13. 排除特定非運行時 Python 腳本
# -------------------------------------------
# 文檔檢查工具
check_documentation_errors.py

# 修復和驗證工具 (開發用)
fix_*.py
verify_*.py
validate_todo7_cross_language_api.py

# 性能分析工具 (非運行時)
analyze_ai_performance.py
apply_performance_optimizations.py

# AI 管理器變體 (非標準運行時)
enterprise_ai_manager.py
intelligent_ai_manager.py
production_ai_manager_v2.py
aiva_continuous_ai_manager.py
aiva_ai_coordinator.py

# 離線模式啟動器 (特殊場景)
launch_offline_mode.py

# 健康檢查 (K8s 用，非容器內)
health_check.py

# -------------------------------------------
# 14. 明確保留運行時必要檔案
# 注意：由於 Dockerfile 使用 COPY *.py，
#       這裡的 !pattern 確保不被上面規則排除
# -------------------------------------------
!requirements.txt
!pyrightconfig.json
!__init__.py

# 保留核心目錄
!services/
!config/
!api/

# 保留所有未被上述規則排除的 .py 檔案
# (Dockerfile 會 COPY *.py，這裡確保它們不被意外排除)
