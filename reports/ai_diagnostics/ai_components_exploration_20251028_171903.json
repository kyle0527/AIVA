{
  "exploration_timestamp": "2025-10-28T17:19:03.634390",
  "five_modules_summary": {
    "aiva_common": {
      "type": "通用基礎模組",
      "ai_components_count": 0,
      "traditional_components_count": 10,
      "ai_components": []
    },
    "core": {
      "type": "核心業務模組 (AI組件密集)",
      "ai_components_count": 14,
      "traditional_components_count": 10,
      "ai_components": [
        {
          "name": "ai_models",
          "type": "AI組件",
          "pluggable": true,
          "functions_count": 0,
          "classes_count": 27
        },
        {
          "name": "ai_commander",
          "type": "AI指揮官",
          "pluggable": true,
          "functions_count": 10,
          "classes_count": 4
        },
        {
          "name": "ai_controller",
          "type": "AI組件",
          "pluggable": true,
          "functions_count": 32,
          "classes_count": 1
        },
        {
          "name": "ai_integration_test",
          "type": "AI組件",
          "pluggable": false,
          "functions_count": 3,
          "classes_count": 2
        },
        {
          "name": "ai_ui_schemas",
          "type": "AI組件",
          "pluggable": true,
          "functions_count": 9,
          "classes_count": 18
        },
        {
          "name": "bio_neuron_master",
          "type": "神經網路",
          "pluggable": true,
          "functions_count": 14,
          "classes_count": 3
        },
        {
          "name": "ai_model_manager",
          "type": "AI組件",
          "pluggable": true,
          "functions_count": 1,
          "classes_count": 1
        },
        {
          "name": "anti_hallucination_module",
          "type": "AI組件",
          "pluggable": false,
          "functions_count": 10,
          "classes_count": 1
        },
        {
          "name": "bio_neuron_core",
          "type": "神經網路",
          "pluggable": false,
          "functions_count": 24,
          "classes_count": 5
        },
        {
          "name": "learning_engine",
          "type": "AI引擎",
          "pluggable": true,
          "functions_count": 33,
          "classes_count": 10
        },
        {
          "name": "neural_network",
          "type": "AI組件",
          "pluggable": false,
          "functions_count": 26,
          "classes_count": 7
        },
        {
          "name": "enhanced_decision_agent",
          "type": "決策系統",
          "pluggable": true,
          "functions_count": 19,
          "classes_count": 3
        },
        {
          "name": "ai_summary_plugin",
          "type": "AI組件",
          "pluggable": true,
          "functions_count": 21,
          "classes_count": 1
        },
        {
          "name": "auto_server",
          "type": "AI組件",
          "pluggable": false,
          "functions_count": 3,
          "classes_count": 0
        }
      ]
    },
    "scan": {
      "type": "掃描發現模組",
      "ai_components_count": 0,
      "traditional_components_count": 10,
      "ai_components": []
    },
    "integration": {
      "type": "整合服務模組",
      "ai_components_count": 3,
      "traditional_components_count": 10,
      "ai_components": [
        {
          "name": "ai_operation_recorder",
          "type": "AI組件",
          "pluggable": false,
          "functions_count": 22,
          "classes_count": 1
        },
        {
          "name": "integrated_ai_trainer",
          "type": "AI組件",
          "pluggable": false,
          "functions_count": 4,
          "classes_count": 1
        },
        {
          "name": "trigger_ai_continuous_learning",
          "type": "學習系統",
          "pluggable": true,
          "functions_count": 2,
          "classes_count": 1
        }
      ]
    },
    "features": {
      "type": "功能檢測模組",
      "ai_components_count": 5,
      "traditional_components_count": 10,
      "ai_components": [
        {
          "name": "smart_detection_manager",
          "type": "智能模組",
          "pluggable": true,
          "functions_count": 12,
          "classes_count": 2
        },
        {
          "name": "unified_smart_detection_manager",
          "type": "智能模組",
          "pluggable": true,
          "functions_count": 24,
          "classes_count": 7
        },
        {
          "name": "smart_idor_detector",
          "type": "智能模組",
          "pluggable": true,
          "functions_count": 7,
          "classes_count": 2
        },
        {
          "name": "smart_detection_manager",
          "type": "智能模組",
          "pluggable": true,
          "functions_count": 6,
          "classes_count": 1
        },
        {
          "name": "smart_ssrf_detector",
          "type": "智能模組",
          "pluggable": true,
          "functions_count": 9,
          "classes_count": 2
        }
      ]
    }
  },
  "ai_components_detailed": [
    {
      "name": "ai_models",
      "path": "services\\core\\ai_models.py",
      "description": "AIVA AI System Models - AI智能系統模組  此文件包含AIVA AI子系統相關的所有數據模型。  職責範圍： 1. AI驗證系統 (AIVerification) 2. AI訓練系統 (AITraining) 3. AI攻擊規劃 (AttackPlan) 4. AI追蹤記錄 (TraceRecord)",
      "type": "AI組件",
      "pluggable": true,
      "functions": [],
      "classes": [
        "AIVerificationRequest",
        "AIVerificationResult",
        "AITrainingStartPayload",
        "AITrainingProgressPayload",
        "AITrainingCompletedPayload",
        "AIExperienceCreatedEvent",
        "AITraceCompletedEvent",
        "AIModelUpdatedEvent",
        "AIModelDeployCommand",
        "AttackStep",
        "AttackPlan",
        "PlanExecutionMetrics",
        "PlanExecutionResult",
        "TraceRecord",
        "ExperienceSample",
        "SessionState",
        "ModelTrainingConfig",
        "ModelTrainingResult",
        "StandardScenario",
        "ScenarioTestResult",
        "RAGKnowledgeUpdatePayload",
        "RAGQueryPayload",
        "RAGResponsePayload",
        "AIVARequest",
        "AIVAResponse",
        "AIVAEvent",
        "AIVACommand"
      ],
      "dependencies": [
        "from ..aiva_common.enums import ("
      ]
    },
    {
      "name": "ai_commander",
      "path": "services\\core\\aiva_core\\ai_commander.py",
      "description": "AI Commander - AIVA 中央 AI 指揮系統  統一指揮所有 AI 組件： 1. BioNeuronRAGAgent（Python 主控 AI） 2. RAG Engine（知識檢索增強） 3. Training Orchestrator（訓練系統） 4. Multi-Language AI Modules（Go/Rust/TypeScript AI）  架構設計：",
      "type": "AI指揮官",
      "pluggable": true,
      "functions": [
        "__init__",
        "_build_plan_generation_prompt",
        "_calculate_plan_confidence",
        "_assess_risk_factors",
        "_build_strategy_decision_prompt"
      ],
      "classes": [
        "AITaskType",
        "AIComponent",
        "AICommander",
        "SimpleStorageBackend"
      ],
      "dependencies": [
        "from services.core.aiva_core.ai_engine import BioNeuronRAGAgent",
        "from services.core.aiva_core.learning.experience_manager import ExperienceManager",
        "from services.core.aiva_core.learning.model_trainer import ModelTrainer",
        "from services.core.aiva_core.multilang_coordinator import MultiLanguageAICoordinator",
        "from services.core.aiva_core.rag import KnowledgeBase, RAGEngine, VectorStore"
      ]
    },
    {
      "name": "ai_controller",
      "path": "services\\core\\aiva_core\\ai_controller.py",
      "description": "AIVA 統一 AI 控制器 - 整合所有 AI 組件 將分散的 AI 組件統一在 BioNeuronRAGAgent 控制下 支援插件化的智能分析系統",
      "type": "AI組件",
      "pluggable": true,
      "functions": [
        "__init__",
        "_analyze_task_complexity",
        "get_summary_plugin_status",
        "enable_summary_plugin",
        "disable_summary_plugin"
      ],
      "classes": [
        "UnifiedAIController"
      ],
      "dependencies": []
    },
    {
      "name": "ai_integration_test",
      "path": "services\\core\\aiva_core\\ai_integration_test.py",
      "description": "AIVA AI 整合測試系統 測試統一 AI 控制器、自然語言生成器和多語言協調器的整合效果",
      "type": "AI組件",
      "pluggable": false,
      "functions": [
        "__init__",
        "_generate_test_report",
        "_generate_recommendations"
      ],
      "classes": [
        "IntegrationTestResult",
        "AIIntegrationTester"
      ],
      "dependencies": [
        "from services.core.aiva_core.ai_controller import UnifiedAIController",
        "from services.core.aiva_core.ai_engine.bio_neuron_core import BioNeuronRAGAgent",
        "from services.core.aiva_core.multilang_coordinator import MultiLanguageAICoordinator",
        "from services.core.aiva_core.nlg_system import AIVANaturalLanguageGenerator"
      ]
    },
    {
      "name": "ai_ui_schemas",
      "path": "services\\core\\aiva_core\\ai_ui_schemas.py",
      "description": "AI Engine 與 UI Panel 數據合約  定義 AI 代理、工具系統、UI 控制面板的標準數據結構",
      "type": "AI組件",
      "pluggable": true,
      "functions": [
        "validate_tool_name",
        "validate_execution_time",
        "validate_query",
        "validate_confidence",
        "validate_score"
      ],
      "classes": [
        "ToolExecutionRequest",
        "ToolExecutionResult",
        "AIAgentQuery",
        "AIAgentResponse",
        "RAGChunk",
        "KnowledgeBaseStats",
        "ScanTaskRequest",
        "ScanTaskResponse",
        "VulnerabilityDetectionRequest",
        "VulnerabilityDetectionResponse",
        "CodeOperationRequest",
        "CodeOperationResponse",
        "DashboardStats",
        "UIServerConfig",
        "CodeReadResult",
        "CodeWriteResult",
        "CodeAnalysisResult",
        "CommandExecutionResult"
      ],
      "dependencies": []
    },
    {
      "name": "bio_neuron_master",
      "path": "services\\core\\aiva_core\\bio_neuron_master.py",
      "description": "BioNeuron Master Controller - BioNeuronRAGAgent 主控系統  支持三種操作模式： 1. UI Mode - 圖形化介面控制 2. AI Mode - 完全自主決策 3. Chat Mode - 自然語言對話  架構： ┌─────────────────────────────────────────┐",
      "type": "神經網路",
      "pluggable": true,
      "functions": [
        "__init__",
        "__init__",
        "_keyword_based_parsing",
        "_rule_based_decision",
        "_assess_risk"
      ],
      "classes": [
        "OperationMode",
        "ConversationContext",
        "BioNeuronMasterController"
      ],
      "dependencies": [
        "from services.core.aiva_core.ai_engine import BioNeuronRAGAgent",
        "from services.core.aiva_core.rag import RAGEngine",
        "from services.core.aiva_core.rag import KnowledgeBase, VectorStore"
      ]
    },
    {
      "name": "ai_model_manager",
      "path": "services\\core\\aiva_core\\ai_engine\\ai_model_manager.py",
      "description": "AI Model Manager - AI 模型管理器  統一管理 bio_neuron_core.py 和訓練系統，提供完整的 AI 核心協調功能",
      "type": "AI組件",
      "pluggable": true,
      "functions": [
        "__init__"
      ],
      "classes": [
        "AIModelManager"
      ],
      "dependencies": []
    },
    {
      "name": "anti_hallucination_module",
      "path": "services\\core\\aiva_core\\ai_engine\\anti_hallucination_module.py",
      "description": "AIVA 抗幻覺驗證模組 用途: 基於知識庫驗證 AI 生成的攻擊計畫，移除不合理步驟 基於: BioNeuron_模型_AI核心大腦.md 分析建議",
      "type": "AI組件",
      "pluggable": false,
      "functions": [
        "demo_anti_hallucination",
        "__init__",
        "_setup_logger",
        "validate_attack_plan",
        "_validate_single_step"
      ],
      "classes": [
        "AntiHallucinationModule"
      ],
      "dependencies": []
    },
    {
      "name": "bio_neuron_core",
      "path": "services\\core\\aiva_core\\ai_engine\\bio_neuron_core.py",
      "description": "BioNeuron Core - 生物啟發式神經網路決策核心 來源: BioNeuronAI/src/bioneuronai/scalable_architecture.py 來源: BioNeuronAI/src/bioneuronai/improved_core.py  這個模組實現了一個可擴展的生物啟發式神經網路 (500萬參數規模) 用於 AI 代理的決策核心,包含 RAG 功能和抗幻覺機",
      "type": "神經網路",
      "pluggable": false,
      "functions": [
        "__init__",
        "forward",
        "forward_batch",
        "__init__",
        "check_confidence"
      ],
      "classes": [
        "BiologicalSpikingLayer",
        "AntiHallucinationModule",
        "ScalableBioNet",
        "BioNeuronRAGAgent",
        "BioNeuronCore"
      ],
      "dependencies": [
        "from services.integration.aiva_integration.reception.experience_repository import ("
      ]
    },
    {
      "name": "learning_engine",
      "path": "services\\core\\aiva_core\\ai_engine\\learning_engine.py",
      "description": "Learning Engine - 學習引擎 實現各種機器學習演算法和訓練策略  這個模組提供了： - 監督學習演算法 - 強化學習機制 - 在線學習能力 - 經驗重播系統 - 遷移學習支援",
      "type": "AI引擎",
      "pluggable": true,
      "functions": [
        "mean_squared_error",
        "cross_entropy",
        "binary_cross_entropy",
        "__init__",
        "update"
      ],
      "classes": [
        "LossFunction",
        "Optimizer",
        "SGDOptimizer",
        "AdamOptimizer",
        "ExperienceBuffer",
        "SupervisedLearner",
        "ReinforcementLearner",
        "OnlineLearner",
        "TransferLearner",
        "LearningEngineManager"
      ],
      "dependencies": []
    },
    {
      "name": "neural_network",
      "path": "services\\core\\aiva_core\\ai_engine\\neural_network.py",
      "description": "Neural Network - 神經網路基礎架構 與 BioNeuron Core 配合的通用神經網路實現  這個模組提供了基礎的神經網路架構，包括： - 前饋神經網路 - 循環神經網路 (RNN) - 長短期記憶網路 (LSTM) - 注意力機制",
      "type": "AI組件",
      "pluggable": false,
      "functions": [
        "relu",
        "relu_derivative",
        "sigmoid",
        "sigmoid_derivative",
        "tanh"
      ],
      "classes": [
        "ActivationFunctions",
        "DenseLayer",
        "FeedForwardNetwork",
        "RecurrentLayer",
        "LSTMLayer",
        "AttentionMechanism",
        "NeuralNetworkBuilder"
      ],
      "dependencies": []
    },
    {
      "name": "enhanced_decision_agent",
      "path": "services\\core\\aiva_core\\decision\\enhanced_decision_agent.py",
      "description": "AIVA 決策代理增強模組 用途: 整合風險評估和經驗驅動決策，提升 AI 決策的智能化水平 基於: BioNeuron_模型_AI核心大腦.md 中的決策代理分析  Compliance Note: - 修正日期: 2025-10-25 - 修正項目: 移除重複定義的 RiskLevel，改用 aiva_common.enums.RiskLevel - 符合架構原則: 使用 aiva_commo",
      "type": "決策系統",
      "pluggable": true,
      "functions": [
        "demo_enhanced_decision_agent",
        "__init__",
        "__init__",
        "__init__",
        "_setup_logger"
      ],
      "classes": [
        "DecisionContext",
        "Decision",
        "EnhancedDecisionAgent"
      ],
      "dependencies": [
        "from services.aiva_common.enums import RiskLevel"
      ]
    },
    {
      "name": "ai_summary_plugin",
      "path": "services\\core\\aiva_core\\plugins\\ai_summary_plugin.py",
      "description": "AI 摘要插件 - 可插拔的智能分析模組 獨立的摘要生成和分析系統，可隨時啟用或禁用",
      "type": "AI組件",
      "pluggable": true,
      "functions": [
        "__init__",
        "is_enabled",
        "enable",
        "disable",
        "get_status"
      ],
      "classes": [
        "AISummaryPlugin"
      ],
      "dependencies": []
    },
    {
      "name": "auto_server",
      "path": "services\\core\\aiva_core\\ui_panel\\auto_server.py",
      "description": "Auto Server - AIVA UI 自動端口伺服器 自動選擇可用端口啟動 UI 面板",
      "type": "AI組件",
      "pluggable": false,
      "functions": [
        "find_free_port",
        "start_auto_server",
        "main"
      ],
      "classes": [],
      "dependencies": []
    },
    {
      "name": "ai_operation_recorder",
      "path": "services\\integration\\aiva_integration\\ai_operation_recorder.py",
      "description": "AIVA JSON 操作記錄器 用途: 結構化記錄 AI 的每個操作步驟，為前端整合準備 基於: 自動啟動並持續執行 AI 攻擊學習的框架設計文件",
      "type": "AI組件",
      "pluggable": false,
      "functions": [
        "demo_operation_recorder",
        "__init__",
        "_generate_session_id",
        "_setup_logger",
        "record_operation"
      ],
      "classes": [
        "AIOperationRecorder"
      ],
      "dependencies": []
    },
    {
      "name": "integrated_ai_trainer",
      "path": "services\\integration\\aiva_integration\\integrated_ai_trainer.py",
      "description": "AIVA 增強型 AI 持續學習觸發器 用途: 整合真實 AIVA 模組功能的持續學習系統 基於: 五大模組架構的完整功能整合",
      "type": "AI組件",
      "pluggable": false,
      "functions": [
        "__init__",
        "_setup_logger",
        "initialize_components",
        "get_integrated_stats"
      ],
      "classes": [
        "IntegratedTrainService"
      ],
      "dependencies": [
        "from services.core.aiva_core.ai_engine.anti_hallucination_module import AntiHallucinationModule",
        "from services.core.aiva_core.decision.enhanced_decision_agent import EnhancedDecisionAgent, DecisionContext, RiskLevel",
        "from services.scan.aiva_scan.target_environment_detector import TargetEnvironmentDetector",
        "from services.integration.aiva_integration.ai_operation_recorder import AIOperationRecorder",
        "from services.integration.aiva_integration.system_performance_monitor import SystemPerformanceMonitor"
      ]
    },
    {
      "name": "trigger_ai_continuous_learning",
      "path": "services\\integration\\aiva_integration\\trigger_ai_continuous_learning.py",
      "description": "AIVA AI 持續學習觸發器 用途: 在 VS Code 中手動觸發 AI 持續攻擊學習 基於: 自動啟動並持續執行_AI_攻擊學習的框架設計.md",
      "type": "學習系統",
      "pluggable": true,
      "functions": [
        "__init__",
        "get_stats"
      ],
      "classes": [
        "ManualTrainService"
      ],
      "dependencies": []
    },
    {
      "name": "smart_detection_manager",
      "path": "services\\features\\smart_detection_manager.py",
      "description": "Smart Detection Manager - 智能檢測管理器  統一管理多個檢測器的執行，提供結構化的錯誤處理、 日誌記錄和性能監控。  遵循 README 規範： - 添加完整的類型標註 - 實現結構化日誌 - 提供詳細的錯誤信息",
      "type": "智能模組",
      "pluggable": true,
      "functions": [
        "get_smart_detection_manager",
        "__init__",
        "to_dict",
        "__init__",
        "register"
      ],
      "classes": [
        "DetectionResult",
        "SmartDetectionManager"
      ],
      "dependencies": []
    },
    {
      "name": "unified_smart_detection_manager",
      "path": "services\\features\\common\\unified_smart_detection_manager.py",
      "description": "統一智能檢測管理器 - 基於 SQLi 模組成功經驗 為所有功能模組提供統一的智能檢測能力",
      "type": "智能模組",
      "pluggable": true,
      "functions": [
        "success_rate",
        "avg_response_time",
        "__init__",
        "get_timeout",
        "on_success"
      ],
      "classes": [
        "DetectionMetrics",
        "AdaptiveTimeoutManager",
        "RateLimiter",
        "EarlyStopController",
        "ProgressTracker",
        "ProtectionDetector",
        "UnifiedSmartDetectionManager"
      ],
      "dependencies": [
        "from services.aiva_common.utils import get_logger"
      ]
    },
    {
      "name": "smart_idor_detector",
      "path": "services\\features\\function_idor\\smart_idor_detector.py",
      "description": "Smart IDOR Detector - 智能 IDOR 檢測器 整合統一檢測管理器，提供自適應超時、速率限制和早期停止功能",
      "type": "智能模組",
      "pluggable": true,
      "functions": [
        "add_finding",
        "add_error",
        "increment_attempts",
        "__init__",
        "_calculate_total_steps"
      ],
      "classes": [
        "IDORDetectionContext",
        "SmartIDORDetector"
      ],
      "dependencies": [
        "from services.aiva_common.schemas import FunctionTaskPayload",
        "from services.aiva_common.utils import get_logger",
        "from services.function.common.detection_config import IDORConfig",
        "from services.function.common.unified_smart_detection_manager import (",
        "from services.aiva_common.enums import Confidence, Severity, VulnerabilityType"
      ]
    },
    {
      "name": "smart_detection_manager",
      "path": "services\\features\\function_sqli\\smart_detection_manager.py",
      "description": "Smart Detection Manager  智能檢測管理器，用於協調各種檢測功能。",
      "type": "智能模組",
      "pluggable": true,
      "functions": [
        "__init__",
        "register_detector",
        "start_detection",
        "get_detection_status",
        "stop_detection"
      ],
      "classes": [
        "SmartDetectionManager"
      ],
      "dependencies": []
    },
    {
      "name": "smart_ssrf_detector",
      "path": "services\\features\\function_ssrf\\smart_ssrf_detector.py",
      "description": "Smart SSRF Detector - 智能 SSRF 檢測器 整合統一檢測管理器，提供自適應超時、速率限制和早期停止功能",
      "type": "智能模組",
      "pluggable": true,
      "functions": [
        "add_finding",
        "add_error",
        "increment_attempts",
        "add_oast_callbacks",
        "__init__"
      ],
      "classes": [
        "SSRFDetectionContext",
        "SmartSSRFDetector"
      ],
      "dependencies": [
        "from services.aiva_common.schemas import FunctionTaskPayload",
        "from services.aiva_common.utils import get_logger",
        "from services.function.common.detection_config import SSRFConfig",
        "from services.function.common.unified_smart_detection_manager import (",
        "from services.aiva_common.enums import Confidence, Severity, VulnerabilityType"
      ]
    }
  ],
  "cli_commands_generated": [
    "python -m services.core.aiva_core.ai_commander --mode=interactive",
    "python -m services.core.aiva_core.learning_engine --auto-train",
    "python -m services.core.aiva_core.trigger_ai_continuous_learning --auto-train",
    "python -m services.scan.aiva_scan.vulnerability_scanner --target=localhost:3000",
    "python -m services.scan.aiva_scan.network_scanner --range=192.168.1.0/24",
    "python -m services.features.function_sqli --payload-file=payloads.txt",
    "python -m services.features.function_xss --target=http://localhost:3000",
    "python ai_security_test.py --comprehensive",
    "python ai_autonomous_testing_loop.py --max-iterations=5",
    "python ai_system_explorer_v3.py --detailed --output=json",
    "python schema_version_checker.py --fix --report"
  ],
  "statistics": {
    "total_modules": 5,
    "total_ai_components": 22,
    "pluggable_ai_components": 15,
    "cli_commands_count": 11
  }
}