{# TypeScript Interface Template #}
{# Generated by AIVA Converters Plugin #}
/**
 * {{ description }}
 * 
 * Generated from: {{ source_schema }}
 * Generated at: {{ generation_timestamp }}
 */

{% for import in imports %}
import {{ import }};
{% endfor %}

{% if enums %}
{% for enum in enums %}
/**
 * {{ enum.description }}
 */
export enum {{ enum.name }} {
{% for value in enum.values %}
  {{ value.name }} = "{{ value.value }}"{% if not loop.last %},{% endif %}{% if value.description %} // {{ value.description }}{% endif %}
{% endfor %}
}

{% endfor %}
{% endif %}

{% if type_aliases %}
{% for alias in type_aliases %}
/**
 * {{ alias.description }}
 */
export type {{ alias.name }} = {{ alias.type }};

{% endfor %}
{% endif %}

/**
 * {{ description }}
 */
export interface {{ class_name }} {
{% for field in fields %}
  /**
   * {{ field.description }}{% if field.constraints %}
   * Constraints: {{ field.constraints }}{% endif %}{% if field.example %}
   * Example: {{ field.example }}{% endif %}
   */
  {{ field.name }}{% if not field.required %}?{% endif %}: {{ field.type }};
{% endfor %}
}

{% if create_namespace %}
export namespace {{ class_name }} {
{% if factory_methods %}
{% for method in factory_methods %}
  /**
   * {{ method.description }}
   */
  export function {{ method.name }}({% if method.params %}{{ method.params|join(', ') }}{% endif %}): {{ class_name }} {
    {{ method.body | indent(4) }}
  }
{% endfor %}
{% endif %}

{% if validators %}
{% for validator in validators %}
  /**
   * {{ validator.description }}
   */
  export function {{ validator.name }}(data: any): data is {{ class_name }} {
    {{ validator.body | indent(4) }}
  }
{% endfor %}
{% endif %}

  /**
   * Type guard to check if an object is a valid {{ class_name }}
   */
  export function is{{ class_name }}(obj: any): obj is {{ class_name }} {
    return (
{% for field in fields %}
{% if field.required %}
      {{ field.validation_check }}{% if not loop.last %} &&{% endif %}
{% endif %}
{% endfor %}
    );
  }

  /**
   * Create a new {{ class_name }} with default values
   */
  export function create(): {{ class_name }} {
    return {
{% for field in fields %}
{% if field.required %}
      {{ field.name }}: {{ field.default_value }}{% if not loop.last %},{% endif %}
{% endif %}
{% endfor %}
    };
  }
}
{% endif %}

{% if export_default %}
/**
 * Default export of {{ class_name }}
 */
export default {{ class_name }};
{% endif %}